package main

import (
	"bytes"
	"compress/gzip"
	"io"
)

// GetHtmlTemplateBinData returns raw, uncompressed file data.
func GetHtmlTemplateBinData() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xac,0x56,
0xdd,0x6e,0xb3,0x46,0x10,0xbd,0xef,0x53,0xac,0xb8,0x6a,0x55,
0x99,0x6d,0x62,0xab,0x5f,0x5a,0xad,0xb9,0x89,0x2b,0xb5,0x51,
0x12,0x27,0x4e,0xdc,0xa6,0xbd,0xa9,0x16,0x18,0xc3,0xd6,0xb0,
0x8b,0x76,0xc6,0x76,0x2c,0xe4,0x77,0xaf,0xf8,0xf1,0x0f,0x2d,
0x76,0x70,0xfc,0xdd,0x20,0x76,0x38,0x73,0x38,0x33,0xbb,0x73,
0x40,0xc4,0x94,0x26,0xde,0x37,0x8c,0x31,0x26,0x62,0x90,0x61,
0x75,0x5b,0x2e,0x49,0x51,0x02,0xde,0x08,0x32,0xd0,0x21,0xe8,
0x60,0xcd,0x26,0x90,0x19,0x4b,0x82,0x57,0x0f,0xf6,0xc0,0x44,
0xe9,0x39,0xb3,0x90,0x0c,0x1d,0xa4,0x75,0x02,0x18,0x03,0x90,
0xc3,0x62,0x0b,0xb3,0xa1,0x13,0x13,0x65,0xf8,0x33,0xe7,0x48,
0x32,0x98,0x67,0x92,0x62,0xd7,0x37,0x86,0x90,0xac,0xcc,0x82,
0x50,0xbb,0x81,0x49,0xf9,0x2e,0xc0,0x07,0x6e,0xdf,0xbd,0xe2,
0x01,0xe2,0x3e,0xe6,0xa6,0x4a,0xbb,0x01,0xa2,0xc3,0x94,0x26,
0x88,0xac,0xa2,0xf5,0xd0,0xc1,0x58,0xf6,0x6f,0x06,0xbd,0x28,
0x1a,0xaf,0x27,0x3f,0xa8,0xb7,0x5b,0xff,0xe1,0x79,0xd9,0x7f,
0x53,0x59,0x2a,0xfb,0x83,0x87,0xd1,0xf7,0xe1,0xaf,0xfc,0x6a,
0xf6,0xfc,0xe5,0x66,0xc0,0xff,0xf9,0x31,0xf8,0x93,0xab,0xbb,
0xd7,0xe7,0xe9,0x38,0x0e,0xfe,0xb0,0x5f,0xde,0x7f,0xba,0x5b,
0x9a,0xc9,0xfb,0xeb,0xf5,0xc3,0x5f,0xab,0xab,0x57,0x87,0x05,
0xd6,0x20,0x1a,0xab,0x22,0xa5,0x87,0x8e,0xd4,0x46,0xaf,0x53,
0xb3,0x40,0xa7,0xee,0x07,0xdf,0x37,0x44,0xf8,0x26,0x5c,0x1f,
0x94,0x1c,0x5f,0xb7,0x35,0x26,0xbe,0x3e,0x80,0x84,0x6a,0xb9,
0x5f,0x55,0x49,0x03,0xef,0x65,0x91,0xa6,0xd2,0xae,0x05,0x8f,
0x07,0xff,0x79,0x88,0x99,0xd4,0x2c,0x48,0x24,0xe2,0xd0,0xf1,
0x65,0x18,0x01,0x2b,0xaf,0x3d,0x5c,0x04,0x01,0x20,0x3a,0x5e,
0x9e,0xbb,0xd3,0x8c,0x4c,0x28,0x09,0x9e,0x64,0x30,0x97,0x11,
0xe0,0x66,0xc3,0x16,0x59,0x8f,0x4c,0xaf,0x08,0xb2,0xac,0x8e,
0x0a,0x5e,0x70,0x75,0xa4,0x5f,0x49,0xab,0x95,0x8e,0x4a,0xfa,
0xf1,0x82,0x0a,0xa2,0xf0,0x80,0xde,0x2c,0xa8,0x67,0x66,0x17,
0xf0,0x87,0x52,0x47,0x60,0x4b,0xfa,0x27,0x6b,0xfc,0x04,0xd2,
0x03,0xf6,0xcc,0x9a,0xa2,0x36,0xa5,0x23,0x06,0xd6,0x1a,0x7b,
0x1e,0xb5,0xd2,0x33,0x53,0x12,0xbf,0xcc,0x55,0x96,0x35,0x64,
0x63,0x15,0x39,0x2a,0x59,0xf0,0xc6,0xee,0x08,0xdf,0xf2,0x8f,
0x76,0x6e,0x04,0x24,0x55,0x82,0x2d,0x3b,0x47,0xd2,0x4f,0x60,
0x2b,0xb0,0x5a,0x94,0xd7,0x5e,0x6c,0x96,0x60,0xeb,0x7b,0x4c,
0x99,0xd3,0xcc,0xab,0x72,0x8b,0x23,0xb6,0xcb,0x2d,0x16,0xbd,
0x50,0xda,0x79,0x0b,0xb4,0x86,0x7b,0x75,0x95,0x82,0x53,0x7c,
0x1c,0xf4,0x42,0x92,0x16,0x78,0x1a,0x33,0x4e,0x42,0xf6,0x3b,
0x58,0x54,0x46,0x9f,0x06,0x3e,0xc2,0xaa,0x1b,0xf0,0x5e,0x12,
0x20,0xb1,0x5b,0x93,0xa6,0x8a,0xd8,0x48,0xd2,0x47,0x2a,0xb7,
0xc3,0xd0,0x06,0x2a,0xa2,0x0d,0x3f,0xda,0x67,0x16,0xb3,0xb8,
0xed,0x19,0xa6,0x32,0x49,0x8e,0xb4,0x2b,0xcf,0x6d,0x71,0xfa,
0x98,0xfb,0x8b,0x26,0xab,0x8a,0x83,0xd1,0x0a,0xab,0x48,0x6d,
0x3b,0xc7,0x1e,0x10,0x7a,0x42,0xd6,0xa6,0x96,0xe7,0xee,0x04,
0x52,0x43,0x30,0x9d,0xdc,0x6f,0x36,0x0e,0x23,0x69,0x23,0xa0,
0xa1,0xf3,0xb7,0x9f,0x48,0x3d,0xaf,0x0e,0xbb,0xa4,0x78,0xb3,
0x11,0x5c,0x7a,0xac,0x99,0x96,0x80,0x44,0xc0,0x23,0x89,0xa2,
0x2c,0xc7,0xfb,0x76,0x0b,0xfb,0x4e,0xf0,0x2a,0x52,0x11,0x71,
0x6a,0xe9,0x47,0xb3,0x62,0x35,0x63,0xee,0x6f,0x58,0x4f,0xc4,
0x89,0x82,0x1b,0x75,0x9d,0x9e,0xb0,0x9a,0xac,0x9e,0xa1,0x2e,
0x22,0x20,0x41,0x60,0x95,0x92,0x7a,0xe8,0x2f,0x55,0xb2,0xb5,
0x91,0x9a,0xee,0x73,0x5a,0xa6,0x59,0x69,0x6f,0x97,0x6a,0xd9,
0x39,0xf2,0x74,0xe7,0xbd,0x67,0xea,0xb9,0x54,0xc1,0xce,0xb4,
0xb7,0x8e,0x7d,0xce,0xfb,0xf5,0x47,0x0d,0x28,0x5e,0x9d,0xe7,
0x6e,0x35,0xc6,0xf5,0xe0,0x17,0x47,0xb9,0xd3,0xe1,0xd3,0x86,
0x3e,0xd1,0xea,0x83,0x09,0x19,0xa9,0xd9,0xec,0xf8,0x58,0x3d,
0xc2,0xea,0x7f,0xba,0x64,0x87,0xba,0x0f,0xea,0xda,0x51,0x14,
0x06,0x55,0x5b,0x50,0xb7,0xf2,0xce,0xd9,0xba,0xce,0x8a,0xbe,
0xea,0x9e,0x75,0x2c,0x47,0xf0,0x63,0x76,0x77,0xec,0x5d,0x82,
0x53,0xf3,0x0f,0xa8,0x0e,0x16,0xdf,0xb6,0xd6,0xcf,0xaa,0xe0,
0x15,0x5e,0xf0,0xf2,0x07,0xf3,0xdf,0x00,0x00,0x00,0xff,0xff,
0x19,0xac,0x5e,0x25,0x67,0x0a,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}